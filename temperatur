import time
import board
import adafruit_dht
import mysql.connector
import os
import thingspeak

# Verbindung zur MariaDB-Datenbank herstellen
db_connection = mysql.connector.connect(
    host="localhost",
    user="username",
    password="password",
    database="database"
)

# Initialisiere das DHT-Gerät
dhtDevice = adafruit_dht.DHT11(board.D4, use_pulseio=False)

# Erstellen der Tabelle 'sensor_data'
create_table_query = """
    CREATE TABLE IF NOT EXISTS sensor_data (
        id INT AUTO_INCREMENT PRIMARY KEY,
        temperature FLOAT,
        humidity FLOAT,
        timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )
"""

cursor = db_connection.cursor()
cursor.execute(create_table_query)
cursor.close()

channel_id =  2208040  # PUT CHANNEL ID HERE
api_key = '3PPLCLV0J24ILLPB'  # PUT YOUR WRITE KEY HERE

channel = thingspeak.Channel(id=channel_id, api_key=api_key)

while True:
    try:
        time.sleep(2.0)
        # Werte aus dem DHT-Sensor auslesen
        temperature_c = dhtDevice.temperature
        humidity = dhtDevice.humidity

        # SQL-Statement zum Einfügen der Werte in die Datenbank
        insert_query = "INSERT INTO sensor_data (temperature, humidity) VALUES (%s, %s)"
        data = (temperature_c, humidity)

        cursor = db_connection.cursor()
        cursor.execute(insert_query, data)

        # Änderungen in der Datenbank speichern
        db_connection.commit()
        cursor.close()

        # Ausgabe der Werte
        print("Temp: {:.2f} °C, Humidity: {:.2f}%".format(temperature_c, humidity))

        # Daten an ThingSpeak senden
        channel.update({'field1': temperature_c, 'field2': humidity})

    except RuntimeError as error:
        # Fehlerbehandlung
        print(error.args[0])
        time.sleep(2.0)
        continue
    except Exception as error:
        dhtDevice.exit()
        raise error

    time.sleep(2.0)
